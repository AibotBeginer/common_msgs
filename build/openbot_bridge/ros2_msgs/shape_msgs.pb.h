// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openbot_bridge/ros2_msgs/shape_msgs.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "openbot_bridge/ros2_msgs/geometry_msgs.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto;
namespace openbot_bridge {
namespace ros2_msgs {
namespace shape_msgs {
class Mesh;
class MeshDefaultTypeInternal;
extern MeshDefaultTypeInternal _Mesh_default_instance_;
class MeshTriangle;
class MeshTriangleDefaultTypeInternal;
extern MeshTriangleDefaultTypeInternal _MeshTriangle_default_instance_;
class Plane;
class PlaneDefaultTypeInternal;
extern PlaneDefaultTypeInternal _Plane_default_instance_;
class SolidPrimitive;
class SolidPrimitiveDefaultTypeInternal;
extern SolidPrimitiveDefaultTypeInternal _SolidPrimitive_default_instance_;
}  // namespace shape_msgs
}  // namespace ros2_msgs
}  // namespace openbot_bridge
PROTOBUF_NAMESPACE_OPEN
template<> ::openbot_bridge::ros2_msgs::shape_msgs::Mesh* Arena::CreateMaybeMessage<::openbot_bridge::ros2_msgs::shape_msgs::Mesh>(Arena*);
template<> ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle* Arena::CreateMaybeMessage<::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle>(Arena*);
template<> ::openbot_bridge::ros2_msgs::shape_msgs::Plane* Arena::CreateMaybeMessage<::openbot_bridge::ros2_msgs::shape_msgs::Plane>(Arena*);
template<> ::openbot_bridge::ros2_msgs::shape_msgs::SolidPrimitive* Arena::CreateMaybeMessage<::openbot_bridge::ros2_msgs::shape_msgs::SolidPrimitive>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace openbot_bridge {
namespace ros2_msgs {
namespace shape_msgs {

// ===================================================================

class Plane PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openbot_bridge.ros2_msgs.shape_msgs.Plane) */ {
 public:
  inline Plane() : Plane(nullptr) {}
  virtual ~Plane();

  Plane(const Plane& from);
  Plane(Plane&& from) noexcept
    : Plane() {
    *this = ::std::move(from);
  }

  inline Plane& operator=(const Plane& from) {
    CopyFrom(from);
    return *this;
  }
  inline Plane& operator=(Plane&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Plane& default_instance();

  static inline const Plane* internal_default_instance() {
    return reinterpret_cast<const Plane*>(
               &_Plane_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Plane& a, Plane& b) {
    a.Swap(&b);
  }
  inline void Swap(Plane* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Plane* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Plane* New() const final {
    return CreateMaybeMessage<Plane>(nullptr);
  }

  Plane* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Plane>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Plane& from);
  void MergeFrom(const Plane& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Plane* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openbot_bridge.ros2_msgs.shape_msgs.Plane";
  }
  protected:
  explicit Plane(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto);
    return ::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoefFieldNumber = 1,
  };
  // repeated double coef = 1 [packed = true];
  int coef_size() const;
  private:
  int _internal_coef_size() const;
  public:
  void clear_coef();
  private:
  double _internal_coef(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_coef() const;
  void _internal_add_coef(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_coef();
  public:
  double coef(int index) const;
  void set_coef(int index, double value);
  void add_coef(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      coef() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_coef();

  // @@protoc_insertion_point(class_scope:openbot_bridge.ros2_msgs.shape_msgs.Plane)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > coef_;
  mutable std::atomic<int> _coef_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto;
};
// -------------------------------------------------------------------

class SolidPrimitive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive) */ {
 public:
  inline SolidPrimitive() : SolidPrimitive(nullptr) {}
  virtual ~SolidPrimitive();

  SolidPrimitive(const SolidPrimitive& from);
  SolidPrimitive(SolidPrimitive&& from) noexcept
    : SolidPrimitive() {
    *this = ::std::move(from);
  }

  inline SolidPrimitive& operator=(const SolidPrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  inline SolidPrimitive& operator=(SolidPrimitive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SolidPrimitive& default_instance();

  static inline const SolidPrimitive* internal_default_instance() {
    return reinterpret_cast<const SolidPrimitive*>(
               &_SolidPrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SolidPrimitive& a, SolidPrimitive& b) {
    a.Swap(&b);
  }
  inline void Swap(SolidPrimitive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SolidPrimitive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SolidPrimitive* New() const final {
    return CreateMaybeMessage<SolidPrimitive>(nullptr);
  }

  SolidPrimitive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SolidPrimitive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SolidPrimitive& from);
  void MergeFrom(const SolidPrimitive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SolidPrimitive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive";
  }
  protected:
  explicit SolidPrimitive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto);
    return ::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionsFieldNumber = 2,
    kPolygonFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // repeated double dimensions = 2 [packed = true];
  int dimensions_size() const;
  private:
  int _internal_dimensions_size() const;
  public:
  void clear_dimensions();
  private:
  double _internal_dimensions(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_dimensions() const;
  void _internal_add_dimensions(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_dimensions();
  public:
  double dimensions(int index) const;
  void set_dimensions(int index, double value);
  void add_dimensions(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      dimensions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_dimensions();

  // .openbot_bridge.ros2_msgs.geometry_msgs.Polygon polygon = 3;
  bool has_polygon() const;
  private:
  bool _internal_has_polygon() const;
  public:
  void clear_polygon();
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon& polygon() const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* release_polygon();
  ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* mutable_polygon();
  void set_allocated_polygon(::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* polygon);
  private:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon& _internal_polygon() const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* _internal_mutable_polygon();
  public:
  void unsafe_arena_set_allocated_polygon(
      ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* polygon);
  ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* unsafe_arena_release_polygon();

  // uint32 type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > dimensions_;
  mutable std::atomic<int> _dimensions_cached_byte_size_;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* polygon_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto;
};
// -------------------------------------------------------------------

class Mesh PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openbot_bridge.ros2_msgs.shape_msgs.Mesh) */ {
 public:
  inline Mesh() : Mesh(nullptr) {}
  virtual ~Mesh();

  Mesh(const Mesh& from);
  Mesh(Mesh&& from) noexcept
    : Mesh() {
    *this = ::std::move(from);
  }

  inline Mesh& operator=(const Mesh& from) {
    CopyFrom(from);
    return *this;
  }
  inline Mesh& operator=(Mesh&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Mesh& default_instance();

  static inline const Mesh* internal_default_instance() {
    return reinterpret_cast<const Mesh*>(
               &_Mesh_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Mesh& a, Mesh& b) {
    a.Swap(&b);
  }
  inline void Swap(Mesh* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Mesh* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Mesh* New() const final {
    return CreateMaybeMessage<Mesh>(nullptr);
  }

  Mesh* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Mesh>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Mesh& from);
  void MergeFrom(const Mesh& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Mesh* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openbot_bridge.ros2_msgs.shape_msgs.Mesh";
  }
  protected:
  explicit Mesh(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto);
    return ::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrianglesFieldNumber = 1,
    kVerticesFieldNumber = 2,
  };
  // repeated .openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle triangles = 1;
  int triangles_size() const;
  private:
  int _internal_triangles_size() const;
  public:
  void clear_triangles();
  ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle* mutable_triangles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle >*
      mutable_triangles();
  private:
  const ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle& _internal_triangles(int index) const;
  ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle* _internal_add_triangles();
  public:
  const ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle& triangles(int index) const;
  ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle* add_triangles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle >&
      triangles() const;

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Point vertices = 2;
  int vertices_size() const;
  private:
  int _internal_vertices_size() const;
  public:
  void clear_vertices();
  ::openbot_bridge::ros2_msgs::geometry_msgs::Point* mutable_vertices(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Point >*
      mutable_vertices();
  private:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Point& _internal_vertices(int index) const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Point* _internal_add_vertices();
  public:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Point& vertices(int index) const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Point* add_vertices();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Point >&
      vertices() const;

  // @@protoc_insertion_point(class_scope:openbot_bridge.ros2_msgs.shape_msgs.Mesh)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle > triangles_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Point > vertices_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto;
};
// -------------------------------------------------------------------

class MeshTriangle PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle) */ {
 public:
  inline MeshTriangle() : MeshTriangle(nullptr) {}
  virtual ~MeshTriangle();

  MeshTriangle(const MeshTriangle& from);
  MeshTriangle(MeshTriangle&& from) noexcept
    : MeshTriangle() {
    *this = ::std::move(from);
  }

  inline MeshTriangle& operator=(const MeshTriangle& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeshTriangle& operator=(MeshTriangle&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MeshTriangle& default_instance();

  static inline const MeshTriangle* internal_default_instance() {
    return reinterpret_cast<const MeshTriangle*>(
               &_MeshTriangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MeshTriangle& a, MeshTriangle& b) {
    a.Swap(&b);
  }
  inline void Swap(MeshTriangle* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeshTriangle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MeshTriangle* New() const final {
    return CreateMaybeMessage<MeshTriangle>(nullptr);
  }

  MeshTriangle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MeshTriangle>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MeshTriangle& from);
  void MergeFrom(const MeshTriangle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeshTriangle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle";
  }
  protected:
  explicit MeshTriangle(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto);
    return ::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVertexIndicesFieldNumber = 1,
  };
  // repeated uint32 vertex_indices = 1 [packed = true];
  int vertex_indices_size() const;
  private:
  int _internal_vertex_indices_size() const;
  public:
  void clear_vertex_indices();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_vertex_indices(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_vertex_indices() const;
  void _internal_add_vertex_indices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_vertex_indices();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 vertex_indices(int index) const;
  void set_vertex_indices(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_vertex_indices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      vertex_indices() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_vertex_indices();

  // @@protoc_insertion_point(class_scope:openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > vertex_indices_;
  mutable std::atomic<int> _vertex_indices_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Plane

// repeated double coef = 1 [packed = true];
inline int Plane::_internal_coef_size() const {
  return coef_.size();
}
inline int Plane::coef_size() const {
  return _internal_coef_size();
}
inline void Plane::clear_coef() {
  coef_.Clear();
}
inline double Plane::_internal_coef(int index) const {
  return coef_.Get(index);
}
inline double Plane::coef(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.shape_msgs.Plane.coef)
  return _internal_coef(index);
}
inline void Plane::set_coef(int index, double value) {
  coef_.Set(index, value);
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.shape_msgs.Plane.coef)
}
inline void Plane::_internal_add_coef(double value) {
  coef_.Add(value);
}
inline void Plane::add_coef(double value) {
  _internal_add_coef(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.shape_msgs.Plane.coef)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Plane::_internal_coef() const {
  return coef_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Plane::coef() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.shape_msgs.Plane.coef)
  return _internal_coef();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Plane::_internal_mutable_coef() {
  return &coef_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Plane::mutable_coef() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.shape_msgs.Plane.coef)
  return _internal_mutable_coef();
}

// -------------------------------------------------------------------

// SolidPrimitive

// uint32 type = 1;
inline void SolidPrimitive::clear_type() {
  type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SolidPrimitive::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SolidPrimitive::type() const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.type)
  return _internal_type();
}
inline void SolidPrimitive::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  type_ = value;
}
inline void SolidPrimitive::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.type)
}

// repeated double dimensions = 2 [packed = true];
inline int SolidPrimitive::_internal_dimensions_size() const {
  return dimensions_.size();
}
inline int SolidPrimitive::dimensions_size() const {
  return _internal_dimensions_size();
}
inline void SolidPrimitive::clear_dimensions() {
  dimensions_.Clear();
}
inline double SolidPrimitive::_internal_dimensions(int index) const {
  return dimensions_.Get(index);
}
inline double SolidPrimitive::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.dimensions)
  return _internal_dimensions(index);
}
inline void SolidPrimitive::set_dimensions(int index, double value) {
  dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.dimensions)
}
inline void SolidPrimitive::_internal_add_dimensions(double value) {
  dimensions_.Add(value);
}
inline void SolidPrimitive::add_dimensions(double value) {
  _internal_add_dimensions(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.dimensions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
SolidPrimitive::_internal_dimensions() const {
  return dimensions_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
SolidPrimitive::dimensions() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.dimensions)
  return _internal_dimensions();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
SolidPrimitive::_internal_mutable_dimensions() {
  return &dimensions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
SolidPrimitive::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.dimensions)
  return _internal_mutable_dimensions();
}

// .openbot_bridge.ros2_msgs.geometry_msgs.Polygon polygon = 3;
inline bool SolidPrimitive::_internal_has_polygon() const {
  return this != internal_default_instance() && polygon_ != nullptr;
}
inline bool SolidPrimitive::has_polygon() const {
  return _internal_has_polygon();
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon& SolidPrimitive::_internal_polygon() const {
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* p = polygon_;
  return p != nullptr ? *p : reinterpret_cast<const ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon&>(
      ::openbot_bridge::ros2_msgs::geometry_msgs::_Polygon_default_instance_);
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon& SolidPrimitive::polygon() const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.polygon)
  return _internal_polygon();
}
inline void SolidPrimitive::unsafe_arena_set_allocated_polygon(
    ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* polygon) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(polygon_);
  }
  polygon_ = polygon;
  if (polygon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.polygon)
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* SolidPrimitive::release_polygon() {
  
  ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* temp = polygon_;
  polygon_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* SolidPrimitive::unsafe_arena_release_polygon() {
  // @@protoc_insertion_point(field_release:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.polygon)
  
  ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* temp = polygon_;
  polygon_ = nullptr;
  return temp;
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* SolidPrimitive::_internal_mutable_polygon() {
  
  if (polygon_ == nullptr) {
    auto* p = CreateMaybeMessage<::openbot_bridge::ros2_msgs::geometry_msgs::Polygon>(GetArena());
    polygon_ = p;
  }
  return polygon_;
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* SolidPrimitive::mutable_polygon() {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.polygon)
  return _internal_mutable_polygon();
}
inline void SolidPrimitive::set_allocated_polygon(::openbot_bridge::ros2_msgs::geometry_msgs::Polygon* polygon) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(polygon_);
  }
  if (polygon) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(polygon)->GetArena();
    if (message_arena != submessage_arena) {
      polygon = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, polygon, submessage_arena);
    }
    
  } else {
    
  }
  polygon_ = polygon;
  // @@protoc_insertion_point(field_set_allocated:openbot_bridge.ros2_msgs.shape_msgs.SolidPrimitive.polygon)
}

// -------------------------------------------------------------------

// Mesh

// repeated .openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle triangles = 1;
inline int Mesh::_internal_triangles_size() const {
  return triangles_.size();
}
inline int Mesh::triangles_size() const {
  return _internal_triangles_size();
}
inline void Mesh::clear_triangles() {
  triangles_.Clear();
}
inline ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle* Mesh::mutable_triangles(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.shape_msgs.Mesh.triangles)
  return triangles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle >*
Mesh::mutable_triangles() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.shape_msgs.Mesh.triangles)
  return &triangles_;
}
inline const ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle& Mesh::_internal_triangles(int index) const {
  return triangles_.Get(index);
}
inline const ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle& Mesh::triangles(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.shape_msgs.Mesh.triangles)
  return _internal_triangles(index);
}
inline ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle* Mesh::_internal_add_triangles() {
  return triangles_.Add();
}
inline ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle* Mesh::add_triangles() {
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.shape_msgs.Mesh.triangles)
  return _internal_add_triangles();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::shape_msgs::MeshTriangle >&
Mesh::triangles() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.shape_msgs.Mesh.triangles)
  return triangles_;
}

// repeated .openbot_bridge.ros2_msgs.geometry_msgs.Point vertices = 2;
inline int Mesh::_internal_vertices_size() const {
  return vertices_.size();
}
inline int Mesh::vertices_size() const {
  return _internal_vertices_size();
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Point* Mesh::mutable_vertices(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.shape_msgs.Mesh.vertices)
  return vertices_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Point >*
Mesh::mutable_vertices() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.shape_msgs.Mesh.vertices)
  return &vertices_;
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Point& Mesh::_internal_vertices(int index) const {
  return vertices_.Get(index);
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Point& Mesh::vertices(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.shape_msgs.Mesh.vertices)
  return _internal_vertices(index);
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Point* Mesh::_internal_add_vertices() {
  return vertices_.Add();
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Point* Mesh::add_vertices() {
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.shape_msgs.Mesh.vertices)
  return _internal_add_vertices();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Point >&
Mesh::vertices() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.shape_msgs.Mesh.vertices)
  return vertices_;
}

// -------------------------------------------------------------------

// MeshTriangle

// repeated uint32 vertex_indices = 1 [packed = true];
inline int MeshTriangle::_internal_vertex_indices_size() const {
  return vertex_indices_.size();
}
inline int MeshTriangle::vertex_indices_size() const {
  return _internal_vertex_indices_size();
}
inline void MeshTriangle::clear_vertex_indices() {
  vertex_indices_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MeshTriangle::_internal_vertex_indices(int index) const {
  return vertex_indices_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MeshTriangle::vertex_indices(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle.vertex_indices)
  return _internal_vertex_indices(index);
}
inline void MeshTriangle::set_vertex_indices(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  vertex_indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle.vertex_indices)
}
inline void MeshTriangle::_internal_add_vertex_indices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  vertex_indices_.Add(value);
}
inline void MeshTriangle::add_vertex_indices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_vertex_indices(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle.vertex_indices)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MeshTriangle::_internal_vertex_indices() const {
  return vertex_indices_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MeshTriangle::vertex_indices() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle.vertex_indices)
  return _internal_vertex_indices();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MeshTriangle::_internal_mutable_vertex_indices() {
  return &vertex_indices_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MeshTriangle::mutable_vertex_indices() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.shape_msgs.MeshTriangle.vertex_indices)
  return _internal_mutable_vertex_indices();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace shape_msgs
}  // namespace ros2_msgs
}  // namespace openbot_bridge

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_openbot_5fbridge_2fros2_5fmsgs_2fshape_5fmsgs_2eproto
