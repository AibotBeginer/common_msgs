// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openbot_bridge/ros2_msgs/trajectory_msgs.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "openbot_bridge/ros2_msgs/std_msgs.pb.h"
#include "openbot_bridge/ros2_msgs/geometry_msgs.pb.h"
#include "openbot_bridge/ros2_msgs/builtin_interfaces.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto;
namespace openbot_bridge {
namespace ros2_msgs {
namespace trajectory_msgs {
class JointTrajectory;
class JointTrajectoryDefaultTypeInternal;
extern JointTrajectoryDefaultTypeInternal _JointTrajectory_default_instance_;
class JointTrajectoryPoint;
class JointTrajectoryPointDefaultTypeInternal;
extern JointTrajectoryPointDefaultTypeInternal _JointTrajectoryPoint_default_instance_;
class MultiDOFJointTrajectory;
class MultiDOFJointTrajectoryDefaultTypeInternal;
extern MultiDOFJointTrajectoryDefaultTypeInternal _MultiDOFJointTrajectory_default_instance_;
class MultiDOFJointTrajectoryPoint;
class MultiDOFJointTrajectoryPointDefaultTypeInternal;
extern MultiDOFJointTrajectoryPointDefaultTypeInternal _MultiDOFJointTrajectoryPoint_default_instance_;
}  // namespace trajectory_msgs
}  // namespace ros2_msgs
}  // namespace openbot_bridge
PROTOBUF_NAMESPACE_OPEN
template<> ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory* Arena::CreateMaybeMessage<::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory>(Arena*);
template<> ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint* Arena::CreateMaybeMessage<::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint>(Arena*);
template<> ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory* Arena::CreateMaybeMessage<::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory>(Arena*);
template<> ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint* Arena::CreateMaybeMessage<::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace openbot_bridge {
namespace ros2_msgs {
namespace trajectory_msgs {

// ===================================================================

class JointTrajectory PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory) */ {
 public:
  inline JointTrajectory() : JointTrajectory(nullptr) {}
  virtual ~JointTrajectory();

  JointTrajectory(const JointTrajectory& from);
  JointTrajectory(JointTrajectory&& from) noexcept
    : JointTrajectory() {
    *this = ::std::move(from);
  }

  inline JointTrajectory& operator=(const JointTrajectory& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointTrajectory& operator=(JointTrajectory&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JointTrajectory& default_instance();

  static inline const JointTrajectory* internal_default_instance() {
    return reinterpret_cast<const JointTrajectory*>(
               &_JointTrajectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(JointTrajectory& a, JointTrajectory& b) {
    a.Swap(&b);
  }
  inline void Swap(JointTrajectory* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JointTrajectory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JointTrajectory* New() const final {
    return CreateMaybeMessage<JointTrajectory>(nullptr);
  }

  JointTrajectory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JointTrajectory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JointTrajectory& from);
  void MergeFrom(const JointTrajectory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JointTrajectory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory";
  }
  protected:
  explicit JointTrajectory(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto);
    return ::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJointNamesFieldNumber = 2,
    kPointsFieldNumber = 3,
    kHeaderFieldNumber = 1,
  };
  // repeated string joint_names = 2;
  int joint_names_size() const;
  private:
  int _internal_joint_names_size() const;
  public:
  void clear_joint_names();
  const std::string& joint_names(int index) const;
  std::string* mutable_joint_names(int index);
  void set_joint_names(int index, const std::string& value);
  void set_joint_names(int index, std::string&& value);
  void set_joint_names(int index, const char* value);
  void set_joint_names(int index, const char* value, size_t size);
  std::string* add_joint_names();
  void add_joint_names(const std::string& value);
  void add_joint_names(std::string&& value);
  void add_joint_names(const char* value);
  void add_joint_names(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& joint_names() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_joint_names();
  private:
  const std::string& _internal_joint_names(int index) const;
  std::string* _internal_add_joint_names();
  public:

  // repeated .openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint points = 3;
  int points_size() const;
  private:
  int _internal_points_size() const;
  public:
  void clear_points();
  ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint >*
      mutable_points();
  private:
  const ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint& _internal_points(int index) const;
  ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint* _internal_add_points();
  public:
  const ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint& points(int index) const;
  ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint >&
      points() const;

  // .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::openbot_bridge::ros2_msgs::std_msgs::Header& header() const;
  ::openbot_bridge::ros2_msgs::std_msgs::Header* release_header();
  ::openbot_bridge::ros2_msgs::std_msgs::Header* mutable_header();
  void set_allocated_header(::openbot_bridge::ros2_msgs::std_msgs::Header* header);
  private:
  const ::openbot_bridge::ros2_msgs::std_msgs::Header& _internal_header() const;
  ::openbot_bridge::ros2_msgs::std_msgs::Header* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::openbot_bridge::ros2_msgs::std_msgs::Header* header);
  ::openbot_bridge::ros2_msgs::std_msgs::Header* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> joint_names_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint > points_;
  ::openbot_bridge::ros2_msgs::std_msgs::Header* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto;
};
// -------------------------------------------------------------------

class JointTrajectoryPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint) */ {
 public:
  inline JointTrajectoryPoint() : JointTrajectoryPoint(nullptr) {}
  virtual ~JointTrajectoryPoint();

  JointTrajectoryPoint(const JointTrajectoryPoint& from);
  JointTrajectoryPoint(JointTrajectoryPoint&& from) noexcept
    : JointTrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline JointTrajectoryPoint& operator=(const JointTrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointTrajectoryPoint& operator=(JointTrajectoryPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JointTrajectoryPoint& default_instance();

  static inline const JointTrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const JointTrajectoryPoint*>(
               &_JointTrajectoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(JointTrajectoryPoint& a, JointTrajectoryPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(JointTrajectoryPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JointTrajectoryPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JointTrajectoryPoint* New() const final {
    return CreateMaybeMessage<JointTrajectoryPoint>(nullptr);
  }

  JointTrajectoryPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JointTrajectoryPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JointTrajectoryPoint& from);
  void MergeFrom(const JointTrajectoryPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JointTrajectoryPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint";
  }
  protected:
  explicit JointTrajectoryPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto);
    return ::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionsFieldNumber = 1,
    kVelocitiesFieldNumber = 2,
    kAccelerationsFieldNumber = 3,
    kEffortFieldNumber = 4,
    kTimeFromStartFieldNumber = 5,
  };
  // repeated double positions = 1;
  int positions_size() const;
  private:
  int _internal_positions_size() const;
  public:
  void clear_positions();
  private:
  double _internal_positions(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_positions() const;
  void _internal_add_positions(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_positions();
  public:
  double positions(int index) const;
  void set_positions(int index, double value);
  void add_positions(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      positions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_positions();

  // repeated double velocities = 2;
  int velocities_size() const;
  private:
  int _internal_velocities_size() const;
  public:
  void clear_velocities();
  private:
  double _internal_velocities(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_velocities() const;
  void _internal_add_velocities(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_velocities();
  public:
  double velocities(int index) const;
  void set_velocities(int index, double value);
  void add_velocities(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      velocities() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_velocities();

  // repeated double accelerations = 3;
  int accelerations_size() const;
  private:
  int _internal_accelerations_size() const;
  public:
  void clear_accelerations();
  private:
  double _internal_accelerations(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_accelerations() const;
  void _internal_add_accelerations(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_accelerations();
  public:
  double accelerations(int index) const;
  void set_accelerations(int index, double value);
  void add_accelerations(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      accelerations() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_accelerations();

  // repeated double effort = 4;
  int effort_size() const;
  private:
  int _internal_effort_size() const;
  public:
  void clear_effort();
  private:
  double _internal_effort(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_effort() const;
  void _internal_add_effort(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_effort();
  public:
  double effort(int index) const;
  void set_effort(int index, double value);
  void add_effort(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      effort() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_effort();

  // .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 5;
  bool has_time_from_start() const;
  private:
  bool _internal_has_time_from_start() const;
  public:
  void clear_time_from_start();
  const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& time_from_start() const;
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* release_time_from_start();
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* mutable_time_from_start();
  void set_allocated_time_from_start(::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start);
  private:
  const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& _internal_time_from_start() const;
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* _internal_mutable_time_from_start();
  public:
  void unsafe_arena_set_allocated_time_from_start(
      ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start);
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* unsafe_arena_release_time_from_start();

  // @@protoc_insertion_point(class_scope:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > positions_;
  mutable std::atomic<int> _positions_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > velocities_;
  mutable std::atomic<int> _velocities_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > accelerations_;
  mutable std::atomic<int> _accelerations_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > effort_;
  mutable std::atomic<int> _effort_cached_byte_size_;
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto;
};
// -------------------------------------------------------------------

class MultiDOFJointTrajectory PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory) */ {
 public:
  inline MultiDOFJointTrajectory() : MultiDOFJointTrajectory(nullptr) {}
  virtual ~MultiDOFJointTrajectory();

  MultiDOFJointTrajectory(const MultiDOFJointTrajectory& from);
  MultiDOFJointTrajectory(MultiDOFJointTrajectory&& from) noexcept
    : MultiDOFJointTrajectory() {
    *this = ::std::move(from);
  }

  inline MultiDOFJointTrajectory& operator=(const MultiDOFJointTrajectory& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiDOFJointTrajectory& operator=(MultiDOFJointTrajectory&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MultiDOFJointTrajectory& default_instance();

  static inline const MultiDOFJointTrajectory* internal_default_instance() {
    return reinterpret_cast<const MultiDOFJointTrajectory*>(
               &_MultiDOFJointTrajectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MultiDOFJointTrajectory& a, MultiDOFJointTrajectory& b) {
    a.Swap(&b);
  }
  inline void Swap(MultiDOFJointTrajectory* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultiDOFJointTrajectory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MultiDOFJointTrajectory* New() const final {
    return CreateMaybeMessage<MultiDOFJointTrajectory>(nullptr);
  }

  MultiDOFJointTrajectory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MultiDOFJointTrajectory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MultiDOFJointTrajectory& from);
  void MergeFrom(const MultiDOFJointTrajectory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MultiDOFJointTrajectory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory";
  }
  protected:
  explicit MultiDOFJointTrajectory(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto);
    return ::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJointNamesFieldNumber = 2,
    kPointsFieldNumber = 3,
    kHeaderFieldNumber = 1,
  };
  // repeated string joint_names = 2;
  int joint_names_size() const;
  private:
  int _internal_joint_names_size() const;
  public:
  void clear_joint_names();
  const std::string& joint_names(int index) const;
  std::string* mutable_joint_names(int index);
  void set_joint_names(int index, const std::string& value);
  void set_joint_names(int index, std::string&& value);
  void set_joint_names(int index, const char* value);
  void set_joint_names(int index, const char* value, size_t size);
  std::string* add_joint_names();
  void add_joint_names(const std::string& value);
  void add_joint_names(std::string&& value);
  void add_joint_names(const char* value);
  void add_joint_names(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& joint_names() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_joint_names();
  private:
  const std::string& _internal_joint_names(int index) const;
  std::string* _internal_add_joint_names();
  public:

  // repeated .openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint points = 3;
  int points_size() const;
  private:
  int _internal_points_size() const;
  public:
  void clear_points();
  ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint >*
      mutable_points();
  private:
  const ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint& _internal_points(int index) const;
  ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint* _internal_add_points();
  public:
  const ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint& points(int index) const;
  ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint >&
      points() const;

  // .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::openbot_bridge::ros2_msgs::std_msgs::Header& header() const;
  ::openbot_bridge::ros2_msgs::std_msgs::Header* release_header();
  ::openbot_bridge::ros2_msgs::std_msgs::Header* mutable_header();
  void set_allocated_header(::openbot_bridge::ros2_msgs::std_msgs::Header* header);
  private:
  const ::openbot_bridge::ros2_msgs::std_msgs::Header& _internal_header() const;
  ::openbot_bridge::ros2_msgs::std_msgs::Header* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::openbot_bridge::ros2_msgs::std_msgs::Header* header);
  ::openbot_bridge::ros2_msgs::std_msgs::Header* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> joint_names_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint > points_;
  ::openbot_bridge::ros2_msgs::std_msgs::Header* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto;
};
// -------------------------------------------------------------------

class MultiDOFJointTrajectoryPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint) */ {
 public:
  inline MultiDOFJointTrajectoryPoint() : MultiDOFJointTrajectoryPoint(nullptr) {}
  virtual ~MultiDOFJointTrajectoryPoint();

  MultiDOFJointTrajectoryPoint(const MultiDOFJointTrajectoryPoint& from);
  MultiDOFJointTrajectoryPoint(MultiDOFJointTrajectoryPoint&& from) noexcept
    : MultiDOFJointTrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline MultiDOFJointTrajectoryPoint& operator=(const MultiDOFJointTrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiDOFJointTrajectoryPoint& operator=(MultiDOFJointTrajectoryPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MultiDOFJointTrajectoryPoint& default_instance();

  static inline const MultiDOFJointTrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const MultiDOFJointTrajectoryPoint*>(
               &_MultiDOFJointTrajectoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MultiDOFJointTrajectoryPoint& a, MultiDOFJointTrajectoryPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(MultiDOFJointTrajectoryPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultiDOFJointTrajectoryPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MultiDOFJointTrajectoryPoint* New() const final {
    return CreateMaybeMessage<MultiDOFJointTrajectoryPoint>(nullptr);
  }

  MultiDOFJointTrajectoryPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MultiDOFJointTrajectoryPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MultiDOFJointTrajectoryPoint& from);
  void MergeFrom(const MultiDOFJointTrajectoryPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MultiDOFJointTrajectoryPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint";
  }
  protected:
  explicit MultiDOFJointTrajectoryPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto);
    return ::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransformsFieldNumber = 1,
    kVelocitiesFieldNumber = 2,
    kAccelerationsFieldNumber = 3,
    kTimeFromStartFieldNumber = 4,
  };
  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Transform transforms = 1;
  int transforms_size() const;
  private:
  int _internal_transforms_size() const;
  public:
  void clear_transforms();
  ::openbot_bridge::ros2_msgs::geometry_msgs::Transform* mutable_transforms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Transform >*
      mutable_transforms();
  private:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Transform& _internal_transforms(int index) const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Transform* _internal_add_transforms();
  public:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Transform& transforms(int index) const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Transform* add_transforms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Transform >&
      transforms() const;

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist velocities = 2;
  int velocities_size() const;
  private:
  int _internal_velocities_size() const;
  public:
  void clear_velocities();
  ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* mutable_velocities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist >*
      mutable_velocities();
  private:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Twist& _internal_velocities(int index) const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* _internal_add_velocities();
  public:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Twist& velocities(int index) const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* add_velocities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist >&
      velocities() const;

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist accelerations = 3;
  int accelerations_size() const;
  private:
  int _internal_accelerations_size() const;
  public:
  void clear_accelerations();
  ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* mutable_accelerations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist >*
      mutable_accelerations();
  private:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Twist& _internal_accelerations(int index) const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* _internal_add_accelerations();
  public:
  const ::openbot_bridge::ros2_msgs::geometry_msgs::Twist& accelerations(int index) const;
  ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* add_accelerations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist >&
      accelerations() const;

  // .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 4;
  bool has_time_from_start() const;
  private:
  bool _internal_has_time_from_start() const;
  public:
  void clear_time_from_start();
  const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& time_from_start() const;
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* release_time_from_start();
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* mutable_time_from_start();
  void set_allocated_time_from_start(::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start);
  private:
  const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& _internal_time_from_start() const;
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* _internal_mutable_time_from_start();
  public:
  void unsafe_arena_set_allocated_time_from_start(
      ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start);
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* unsafe_arena_release_time_from_start();

  // @@protoc_insertion_point(class_scope:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Transform > transforms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist > velocities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist > accelerations_;
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JointTrajectory

// .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
inline bool JointTrajectory::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool JointTrajectory::has_header() const {
  return _internal_has_header();
}
inline const ::openbot_bridge::ros2_msgs::std_msgs::Header& JointTrajectory::_internal_header() const {
  const ::openbot_bridge::ros2_msgs::std_msgs::Header* p = header_;
  return p != nullptr ? *p : reinterpret_cast<const ::openbot_bridge::ros2_msgs::std_msgs::Header&>(
      ::openbot_bridge::ros2_msgs::std_msgs::_Header_default_instance_);
}
inline const ::openbot_bridge::ros2_msgs::std_msgs::Header& JointTrajectory::header() const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.header)
  return _internal_header();
}
inline void JointTrajectory::unsafe_arena_set_allocated_header(
    ::openbot_bridge::ros2_msgs::std_msgs::Header* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.header)
}
inline ::openbot_bridge::ros2_msgs::std_msgs::Header* JointTrajectory::release_header() {
  
  ::openbot_bridge::ros2_msgs::std_msgs::Header* temp = header_;
  header_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::openbot_bridge::ros2_msgs::std_msgs::Header* JointTrajectory::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.header)
  
  ::openbot_bridge::ros2_msgs::std_msgs::Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::openbot_bridge::ros2_msgs::std_msgs::Header* JointTrajectory::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::openbot_bridge::ros2_msgs::std_msgs::Header>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::openbot_bridge::ros2_msgs::std_msgs::Header* JointTrajectory::mutable_header() {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.header)
  return _internal_mutable_header();
}
inline void JointTrajectory::set_allocated_header(::openbot_bridge::ros2_msgs::std_msgs::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header)->GetArena();
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.header)
}

// repeated string joint_names = 2;
inline int JointTrajectory::_internal_joint_names_size() const {
  return joint_names_.size();
}
inline int JointTrajectory::joint_names_size() const {
  return _internal_joint_names_size();
}
inline void JointTrajectory::clear_joint_names() {
  joint_names_.Clear();
}
inline std::string* JointTrajectory::add_joint_names() {
  // @@protoc_insertion_point(field_add_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
  return _internal_add_joint_names();
}
inline const std::string& JointTrajectory::_internal_joint_names(int index) const {
  return joint_names_.Get(index);
}
inline const std::string& JointTrajectory::joint_names(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
  return _internal_joint_names(index);
}
inline std::string* JointTrajectory::mutable_joint_names(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
  return joint_names_.Mutable(index);
}
inline void JointTrajectory::set_joint_names(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
  joint_names_.Mutable(index)->assign(value);
}
inline void JointTrajectory::set_joint_names(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
  joint_names_.Mutable(index)->assign(std::move(value));
}
inline void JointTrajectory::set_joint_names(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  joint_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
}
inline void JointTrajectory::set_joint_names(int index, const char* value, size_t size) {
  joint_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
}
inline std::string* JointTrajectory::_internal_add_joint_names() {
  return joint_names_.Add();
}
inline void JointTrajectory::add_joint_names(const std::string& value) {
  joint_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
}
inline void JointTrajectory::add_joint_names(std::string&& value) {
  joint_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
}
inline void JointTrajectory::add_joint_names(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  joint_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
}
inline void JointTrajectory::add_joint_names(const char* value, size_t size) {
  joint_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
JointTrajectory::joint_names() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
  return joint_names_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
JointTrajectory::mutable_joint_names() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names)
  return &joint_names_;
}

// repeated .openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint points = 3;
inline int JointTrajectory::_internal_points_size() const {
  return points_.size();
}
inline int JointTrajectory::points_size() const {
  return _internal_points_size();
}
inline void JointTrajectory::clear_points() {
  points_.Clear();
}
inline ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint* JointTrajectory::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.points)
  return points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint >*
JointTrajectory::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.points)
  return &points_;
}
inline const ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint& JointTrajectory::_internal_points(int index) const {
  return points_.Get(index);
}
inline const ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint& JointTrajectory::points(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.points)
  return _internal_points(index);
}
inline ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint* JointTrajectory::_internal_add_points() {
  return points_.Add();
}
inline ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint* JointTrajectory::add_points() {
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.points)
  return _internal_add_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint >&
JointTrajectory::points() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.points)
  return points_;
}

// -------------------------------------------------------------------

// JointTrajectoryPoint

// repeated double positions = 1;
inline int JointTrajectoryPoint::_internal_positions_size() const {
  return positions_.size();
}
inline int JointTrajectoryPoint::positions_size() const {
  return _internal_positions_size();
}
inline void JointTrajectoryPoint::clear_positions() {
  positions_.Clear();
}
inline double JointTrajectoryPoint::_internal_positions(int index) const {
  return positions_.Get(index);
}
inline double JointTrajectoryPoint::positions(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.positions)
  return _internal_positions(index);
}
inline void JointTrajectoryPoint::set_positions(int index, double value) {
  positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.positions)
}
inline void JointTrajectoryPoint::_internal_add_positions(double value) {
  positions_.Add(value);
}
inline void JointTrajectoryPoint::add_positions(double value) {
  _internal_add_positions(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.positions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointTrajectoryPoint::_internal_positions() const {
  return positions_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointTrajectoryPoint::positions() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.positions)
  return _internal_positions();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointTrajectoryPoint::_internal_mutable_positions() {
  return &positions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointTrajectoryPoint::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.positions)
  return _internal_mutable_positions();
}

// repeated double velocities = 2;
inline int JointTrajectoryPoint::_internal_velocities_size() const {
  return velocities_.size();
}
inline int JointTrajectoryPoint::velocities_size() const {
  return _internal_velocities_size();
}
inline void JointTrajectoryPoint::clear_velocities() {
  velocities_.Clear();
}
inline double JointTrajectoryPoint::_internal_velocities(int index) const {
  return velocities_.Get(index);
}
inline double JointTrajectoryPoint::velocities(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.velocities)
  return _internal_velocities(index);
}
inline void JointTrajectoryPoint::set_velocities(int index, double value) {
  velocities_.Set(index, value);
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.velocities)
}
inline void JointTrajectoryPoint::_internal_add_velocities(double value) {
  velocities_.Add(value);
}
inline void JointTrajectoryPoint::add_velocities(double value) {
  _internal_add_velocities(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.velocities)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointTrajectoryPoint::_internal_velocities() const {
  return velocities_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointTrajectoryPoint::velocities() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.velocities)
  return _internal_velocities();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointTrajectoryPoint::_internal_mutable_velocities() {
  return &velocities_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointTrajectoryPoint::mutable_velocities() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.velocities)
  return _internal_mutable_velocities();
}

// repeated double accelerations = 3;
inline int JointTrajectoryPoint::_internal_accelerations_size() const {
  return accelerations_.size();
}
inline int JointTrajectoryPoint::accelerations_size() const {
  return _internal_accelerations_size();
}
inline void JointTrajectoryPoint::clear_accelerations() {
  accelerations_.Clear();
}
inline double JointTrajectoryPoint::_internal_accelerations(int index) const {
  return accelerations_.Get(index);
}
inline double JointTrajectoryPoint::accelerations(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.accelerations)
  return _internal_accelerations(index);
}
inline void JointTrajectoryPoint::set_accelerations(int index, double value) {
  accelerations_.Set(index, value);
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.accelerations)
}
inline void JointTrajectoryPoint::_internal_add_accelerations(double value) {
  accelerations_.Add(value);
}
inline void JointTrajectoryPoint::add_accelerations(double value) {
  _internal_add_accelerations(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.accelerations)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointTrajectoryPoint::_internal_accelerations() const {
  return accelerations_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointTrajectoryPoint::accelerations() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.accelerations)
  return _internal_accelerations();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointTrajectoryPoint::_internal_mutable_accelerations() {
  return &accelerations_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointTrajectoryPoint::mutable_accelerations() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.accelerations)
  return _internal_mutable_accelerations();
}

// repeated double effort = 4;
inline int JointTrajectoryPoint::_internal_effort_size() const {
  return effort_.size();
}
inline int JointTrajectoryPoint::effort_size() const {
  return _internal_effort_size();
}
inline void JointTrajectoryPoint::clear_effort() {
  effort_.Clear();
}
inline double JointTrajectoryPoint::_internal_effort(int index) const {
  return effort_.Get(index);
}
inline double JointTrajectoryPoint::effort(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.effort)
  return _internal_effort(index);
}
inline void JointTrajectoryPoint::set_effort(int index, double value) {
  effort_.Set(index, value);
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.effort)
}
inline void JointTrajectoryPoint::_internal_add_effort(double value) {
  effort_.Add(value);
}
inline void JointTrajectoryPoint::add_effort(double value) {
  _internal_add_effort(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.effort)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointTrajectoryPoint::_internal_effort() const {
  return effort_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
JointTrajectoryPoint::effort() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.effort)
  return _internal_effort();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointTrajectoryPoint::_internal_mutable_effort() {
  return &effort_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
JointTrajectoryPoint::mutable_effort() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.effort)
  return _internal_mutable_effort();
}

// .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 5;
inline bool JointTrajectoryPoint::_internal_has_time_from_start() const {
  return this != internal_default_instance() && time_from_start_ != nullptr;
}
inline bool JointTrajectoryPoint::has_time_from_start() const {
  return _internal_has_time_from_start();
}
inline const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& JointTrajectoryPoint::_internal_time_from_start() const {
  const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* p = time_from_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration&>(
      ::openbot_bridge::ros2_msgs::builtin_interfaces::_Duration_default_instance_);
}
inline const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& JointTrajectoryPoint::time_from_start() const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.time_from_start)
  return _internal_time_from_start();
}
inline void JointTrajectoryPoint::unsafe_arena_set_allocated_time_from_start(
    ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_from_start_);
  }
  time_from_start_ = time_from_start;
  if (time_from_start) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.time_from_start)
}
inline ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* JointTrajectoryPoint::release_time_from_start() {
  
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* temp = time_from_start_;
  time_from_start_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* JointTrajectoryPoint::unsafe_arena_release_time_from_start() {
  // @@protoc_insertion_point(field_release:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.time_from_start)
  
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* temp = time_from_start_;
  time_from_start_ = nullptr;
  return temp;
}
inline ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* JointTrajectoryPoint::_internal_mutable_time_from_start() {
  
  if (time_from_start_ == nullptr) {
    auto* p = CreateMaybeMessage<::openbot_bridge::ros2_msgs::builtin_interfaces::Duration>(GetArena());
    time_from_start_ = p;
  }
  return time_from_start_;
}
inline ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* JointTrajectoryPoint::mutable_time_from_start() {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.time_from_start)
  return _internal_mutable_time_from_start();
}
inline void JointTrajectoryPoint::set_allocated_time_from_start(::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_from_start_);
  }
  if (time_from_start) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_from_start)->GetArena();
    if (message_arena != submessage_arena) {
      time_from_start = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time_from_start, submessage_arena);
    }
    
  } else {
    
  }
  time_from_start_ = time_from_start;
  // @@protoc_insertion_point(field_set_allocated:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint.time_from_start)
}

// -------------------------------------------------------------------

// MultiDOFJointTrajectory

// .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
inline bool MultiDOFJointTrajectory::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool MultiDOFJointTrajectory::has_header() const {
  return _internal_has_header();
}
inline const ::openbot_bridge::ros2_msgs::std_msgs::Header& MultiDOFJointTrajectory::_internal_header() const {
  const ::openbot_bridge::ros2_msgs::std_msgs::Header* p = header_;
  return p != nullptr ? *p : reinterpret_cast<const ::openbot_bridge::ros2_msgs::std_msgs::Header&>(
      ::openbot_bridge::ros2_msgs::std_msgs::_Header_default_instance_);
}
inline const ::openbot_bridge::ros2_msgs::std_msgs::Header& MultiDOFJointTrajectory::header() const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.header)
  return _internal_header();
}
inline void MultiDOFJointTrajectory::unsafe_arena_set_allocated_header(
    ::openbot_bridge::ros2_msgs::std_msgs::Header* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.header)
}
inline ::openbot_bridge::ros2_msgs::std_msgs::Header* MultiDOFJointTrajectory::release_header() {
  
  ::openbot_bridge::ros2_msgs::std_msgs::Header* temp = header_;
  header_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::openbot_bridge::ros2_msgs::std_msgs::Header* MultiDOFJointTrajectory::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.header)
  
  ::openbot_bridge::ros2_msgs::std_msgs::Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::openbot_bridge::ros2_msgs::std_msgs::Header* MultiDOFJointTrajectory::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::openbot_bridge::ros2_msgs::std_msgs::Header>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::openbot_bridge::ros2_msgs::std_msgs::Header* MultiDOFJointTrajectory::mutable_header() {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.header)
  return _internal_mutable_header();
}
inline void MultiDOFJointTrajectory::set_allocated_header(::openbot_bridge::ros2_msgs::std_msgs::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header)->GetArena();
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.header)
}

// repeated string joint_names = 2;
inline int MultiDOFJointTrajectory::_internal_joint_names_size() const {
  return joint_names_.size();
}
inline int MultiDOFJointTrajectory::joint_names_size() const {
  return _internal_joint_names_size();
}
inline void MultiDOFJointTrajectory::clear_joint_names() {
  joint_names_.Clear();
}
inline std::string* MultiDOFJointTrajectory::add_joint_names() {
  // @@protoc_insertion_point(field_add_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
  return _internal_add_joint_names();
}
inline const std::string& MultiDOFJointTrajectory::_internal_joint_names(int index) const {
  return joint_names_.Get(index);
}
inline const std::string& MultiDOFJointTrajectory::joint_names(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
  return _internal_joint_names(index);
}
inline std::string* MultiDOFJointTrajectory::mutable_joint_names(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
  return joint_names_.Mutable(index);
}
inline void MultiDOFJointTrajectory::set_joint_names(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
  joint_names_.Mutable(index)->assign(value);
}
inline void MultiDOFJointTrajectory::set_joint_names(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
  joint_names_.Mutable(index)->assign(std::move(value));
}
inline void MultiDOFJointTrajectory::set_joint_names(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  joint_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
}
inline void MultiDOFJointTrajectory::set_joint_names(int index, const char* value, size_t size) {
  joint_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
}
inline std::string* MultiDOFJointTrajectory::_internal_add_joint_names() {
  return joint_names_.Add();
}
inline void MultiDOFJointTrajectory::add_joint_names(const std::string& value) {
  joint_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
}
inline void MultiDOFJointTrajectory::add_joint_names(std::string&& value) {
  joint_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
}
inline void MultiDOFJointTrajectory::add_joint_names(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  joint_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
}
inline void MultiDOFJointTrajectory::add_joint_names(const char* value, size_t size) {
  joint_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MultiDOFJointTrajectory::joint_names() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
  return joint_names_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MultiDOFJointTrajectory::mutable_joint_names() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names)
  return &joint_names_;
}

// repeated .openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint points = 3;
inline int MultiDOFJointTrajectory::_internal_points_size() const {
  return points_.size();
}
inline int MultiDOFJointTrajectory::points_size() const {
  return _internal_points_size();
}
inline void MultiDOFJointTrajectory::clear_points() {
  points_.Clear();
}
inline ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint* MultiDOFJointTrajectory::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.points)
  return points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint >*
MultiDOFJointTrajectory::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.points)
  return &points_;
}
inline const ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint& MultiDOFJointTrajectory::_internal_points(int index) const {
  return points_.Get(index);
}
inline const ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint& MultiDOFJointTrajectory::points(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.points)
  return _internal_points(index);
}
inline ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint* MultiDOFJointTrajectory::_internal_add_points() {
  return points_.Add();
}
inline ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint* MultiDOFJointTrajectory::add_points() {
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.points)
  return _internal_add_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint >&
MultiDOFJointTrajectory::points() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.points)
  return points_;
}

// -------------------------------------------------------------------

// MultiDOFJointTrajectoryPoint

// repeated .openbot_bridge.ros2_msgs.geometry_msgs.Transform transforms = 1;
inline int MultiDOFJointTrajectoryPoint::_internal_transforms_size() const {
  return transforms_.size();
}
inline int MultiDOFJointTrajectoryPoint::transforms_size() const {
  return _internal_transforms_size();
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Transform* MultiDOFJointTrajectoryPoint::mutable_transforms(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.transforms)
  return transforms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Transform >*
MultiDOFJointTrajectoryPoint::mutable_transforms() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.transforms)
  return &transforms_;
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Transform& MultiDOFJointTrajectoryPoint::_internal_transforms(int index) const {
  return transforms_.Get(index);
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Transform& MultiDOFJointTrajectoryPoint::transforms(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.transforms)
  return _internal_transforms(index);
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Transform* MultiDOFJointTrajectoryPoint::_internal_add_transforms() {
  return transforms_.Add();
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Transform* MultiDOFJointTrajectoryPoint::add_transforms() {
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.transforms)
  return _internal_add_transforms();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Transform >&
MultiDOFJointTrajectoryPoint::transforms() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.transforms)
  return transforms_;
}

// repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist velocities = 2;
inline int MultiDOFJointTrajectoryPoint::_internal_velocities_size() const {
  return velocities_.size();
}
inline int MultiDOFJointTrajectoryPoint::velocities_size() const {
  return _internal_velocities_size();
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* MultiDOFJointTrajectoryPoint::mutable_velocities(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.velocities)
  return velocities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist >*
MultiDOFJointTrajectoryPoint::mutable_velocities() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.velocities)
  return &velocities_;
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Twist& MultiDOFJointTrajectoryPoint::_internal_velocities(int index) const {
  return velocities_.Get(index);
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Twist& MultiDOFJointTrajectoryPoint::velocities(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.velocities)
  return _internal_velocities(index);
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* MultiDOFJointTrajectoryPoint::_internal_add_velocities() {
  return velocities_.Add();
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* MultiDOFJointTrajectoryPoint::add_velocities() {
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.velocities)
  return _internal_add_velocities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist >&
MultiDOFJointTrajectoryPoint::velocities() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.velocities)
  return velocities_;
}

// repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist accelerations = 3;
inline int MultiDOFJointTrajectoryPoint::_internal_accelerations_size() const {
  return accelerations_.size();
}
inline int MultiDOFJointTrajectoryPoint::accelerations_size() const {
  return _internal_accelerations_size();
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* MultiDOFJointTrajectoryPoint::mutable_accelerations(int index) {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.accelerations)
  return accelerations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist >*
MultiDOFJointTrajectoryPoint::mutable_accelerations() {
  // @@protoc_insertion_point(field_mutable_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.accelerations)
  return &accelerations_;
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Twist& MultiDOFJointTrajectoryPoint::_internal_accelerations(int index) const {
  return accelerations_.Get(index);
}
inline const ::openbot_bridge::ros2_msgs::geometry_msgs::Twist& MultiDOFJointTrajectoryPoint::accelerations(int index) const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.accelerations)
  return _internal_accelerations(index);
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* MultiDOFJointTrajectoryPoint::_internal_add_accelerations() {
  return accelerations_.Add();
}
inline ::openbot_bridge::ros2_msgs::geometry_msgs::Twist* MultiDOFJointTrajectoryPoint::add_accelerations() {
  // @@protoc_insertion_point(field_add:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.accelerations)
  return _internal_add_accelerations();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openbot_bridge::ros2_msgs::geometry_msgs::Twist >&
MultiDOFJointTrajectoryPoint::accelerations() const {
  // @@protoc_insertion_point(field_list:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.accelerations)
  return accelerations_;
}

// .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 4;
inline bool MultiDOFJointTrajectoryPoint::_internal_has_time_from_start() const {
  return this != internal_default_instance() && time_from_start_ != nullptr;
}
inline bool MultiDOFJointTrajectoryPoint::has_time_from_start() const {
  return _internal_has_time_from_start();
}
inline const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& MultiDOFJointTrajectoryPoint::_internal_time_from_start() const {
  const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* p = time_from_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration&>(
      ::openbot_bridge::ros2_msgs::builtin_interfaces::_Duration_default_instance_);
}
inline const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& MultiDOFJointTrajectoryPoint::time_from_start() const {
  // @@protoc_insertion_point(field_get:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.time_from_start)
  return _internal_time_from_start();
}
inline void MultiDOFJointTrajectoryPoint::unsafe_arena_set_allocated_time_from_start(
    ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_from_start_);
  }
  time_from_start_ = time_from_start;
  if (time_from_start) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.time_from_start)
}
inline ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* MultiDOFJointTrajectoryPoint::release_time_from_start() {
  
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* temp = time_from_start_;
  time_from_start_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* MultiDOFJointTrajectoryPoint::unsafe_arena_release_time_from_start() {
  // @@protoc_insertion_point(field_release:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.time_from_start)
  
  ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* temp = time_from_start_;
  time_from_start_ = nullptr;
  return temp;
}
inline ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* MultiDOFJointTrajectoryPoint::_internal_mutable_time_from_start() {
  
  if (time_from_start_ == nullptr) {
    auto* p = CreateMaybeMessage<::openbot_bridge::ros2_msgs::builtin_interfaces::Duration>(GetArena());
    time_from_start_ = p;
  }
  return time_from_start_;
}
inline ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* MultiDOFJointTrajectoryPoint::mutable_time_from_start() {
  // @@protoc_insertion_point(field_mutable:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.time_from_start)
  return _internal_mutable_time_from_start();
}
inline void MultiDOFJointTrajectoryPoint::set_allocated_time_from_start(::openbot_bridge::ros2_msgs::builtin_interfaces::Duration* time_from_start) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_from_start_);
  }
  if (time_from_start) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_from_start)->GetArena();
    if (message_arena != submessage_arena) {
      time_from_start = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time_from_start, submessage_arena);
    }
    
  } else {
    
  }
  time_from_start_ = time_from_start;
  // @@protoc_insertion_point(field_set_allocated:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint.time_from_start)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace trajectory_msgs
}  // namespace ros2_msgs
}  // namespace openbot_bridge

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto
