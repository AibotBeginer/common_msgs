// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openbot_bridge/ros2_msgs/trajectory_msgs.proto

#include "openbot_bridge/ros2_msgs/trajectory_msgs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_openbot_5fbridge_2fros2_5fmsgs_2fbuiltin_5finterfaces_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Duration_openbot_5fbridge_2fros2_5fmsgs_2fbuiltin_5finterfaces_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_openbot_5fbridge_2fros2_5fmsgs_2fgeometry_5fmsgs_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Transform_openbot_5fbridge_2fros2_5fmsgs_2fgeometry_5fmsgs_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_openbot_5fbridge_2fros2_5fmsgs_2fgeometry_5fmsgs_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Twist_openbot_5fbridge_2fros2_5fmsgs_2fgeometry_5fmsgs_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_openbot_5fbridge_2fros2_5fmsgs_2fstd_5fmsgs_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Header_openbot_5fbridge_2fros2_5fmsgs_2fstd_5fmsgs_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MultiDOFJointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto;
namespace openbot_bridge {
namespace ros2_msgs {
namespace trajectory_msgs {
class JointTrajectoryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JointTrajectory> _instance;
} _JointTrajectory_default_instance_;
class JointTrajectoryPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JointTrajectoryPoint> _instance;
} _JointTrajectoryPoint_default_instance_;
class MultiDOFJointTrajectoryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MultiDOFJointTrajectory> _instance;
} _MultiDOFJointTrajectory_default_instance_;
class MultiDOFJointTrajectoryPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MultiDOFJointTrajectoryPoint> _instance;
} _MultiDOFJointTrajectoryPoint_default_instance_;
}  // namespace trajectory_msgs
}  // namespace ros2_msgs
}  // namespace openbot_bridge
static void InitDefaultsscc_info_JointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openbot_bridge::ros2_msgs::trajectory_msgs::_JointTrajectory_default_instance_;
    new (ptr) ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_JointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_JointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto}, {
      &scc_info_Header_openbot_5fbridge_2fros2_5fmsgs_2fstd_5fmsgs_2eproto.base,
      &scc_info_JointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base,}};

static void InitDefaultsscc_info_JointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openbot_bridge::ros2_msgs::trajectory_msgs::_JointTrajectoryPoint_default_instance_;
    new (ptr) ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_JointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto}, {
      &scc_info_Duration_openbot_5fbridge_2fros2_5fmsgs_2fbuiltin_5finterfaces_2eproto.base,}};

static void InitDefaultsscc_info_MultiDOFJointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openbot_bridge::ros2_msgs::trajectory_msgs::_MultiDOFJointTrajectory_default_instance_;
    new (ptr) ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MultiDOFJointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MultiDOFJointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto}, {
      &scc_info_Header_openbot_5fbridge_2fros2_5fmsgs_2fstd_5fmsgs_2eproto.base,
      &scc_info_MultiDOFJointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base,}};

static void InitDefaultsscc_info_MultiDOFJointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::openbot_bridge::ros2_msgs::trajectory_msgs::_MultiDOFJointTrajectoryPoint_default_instance_;
    new (ptr) ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MultiDOFJointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_MultiDOFJointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto}, {
      &scc_info_Transform_openbot_5fbridge_2fros2_5fmsgs_2fgeometry_5fmsgs_2eproto.base,
      &scc_info_Twist_openbot_5fbridge_2fros2_5fmsgs_2fgeometry_5fmsgs_2eproto.base,
      &scc_info_Duration_openbot_5fbridge_2fros2_5fmsgs_2fbuiltin_5finterfaces_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory, header_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory, joint_names_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory, points_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint, positions_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint, velocities_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint, accelerations_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint, effort_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint, time_from_start_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory, header_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory, joint_names_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory, points_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint, transforms_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint, velocities_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint, accelerations_),
  PROTOBUF_FIELD_OFFSET(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint, time_from_start_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory)},
  { 8, -1, sizeof(::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint)},
  { 18, -1, sizeof(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory)},
  { 26, -1, sizeof(::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::openbot_bridge::ros2_msgs::trajectory_msgs::_JointTrajectory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::openbot_bridge::ros2_msgs::trajectory_msgs::_JointTrajectoryPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::openbot_bridge::ros2_msgs::trajectory_msgs::_MultiDOFJointTrajectory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::openbot_bridge::ros2_msgs::trajectory_msgs::_MultiDOFJointTrajectoryPoint_default_instance_),
};

const char descriptor_table_protodef_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.openbot_bridge/ros2_msgs/trajectory_ms"
  "gs.proto\022(openbot_bridge.ros2_msgs.traje"
  "ctory_msgs\032\'openbot_bridge/ros2_msgs/std"
  "_msgs.proto\032,openbot_bridge/ros2_msgs/ge"
  "ometry_msgs.proto\0321openbot_bridge/ros2_m"
  "sgs/builtin_interfaces.proto\"\261\001\n\017JointTr"
  "ajectory\0229\n\006header\030\001 \001(\0132).openbot_bridg"
  "e.ros2_msgs.std_msgs.Header\022\023\n\013joint_nam"
  "es\030\002 \003(\t\022N\n\006points\030\003 \003(\0132>.openbot_bridg"
  "e.ros2_msgs.trajectory_msgs.JointTraject"
  "oryPoint\"\264\001\n\024JointTrajectoryPoint\022\021\n\tpos"
  "itions\030\001 \003(\001\022\022\n\nvelocities\030\002 \003(\001\022\025\n\racce"
  "lerations\030\003 \003(\001\022\016\n\006effort\030\004 \003(\001\022N\n\017time_"
  "from_start\030\005 \001(\01325.openbot_bridge.ros2_m"
  "sgs.builtin_interfaces.Duration\"\301\001\n\027Mult"
  "iDOFJointTrajectory\0229\n\006header\030\001 \001(\0132).op"
  "enbot_bridge.ros2_msgs.std_msgs.Header\022\023"
  "\n\013joint_names\030\002 \003(\t\022V\n\006points\030\003 \003(\0132F.op"
  "enbot_bridge.ros2_msgs.trajectory_msgs.M"
  "ultiDOFJointTrajectoryPoint\"\276\002\n\034MultiDOF"
  "JointTrajectoryPoint\022E\n\ntransforms\030\001 \003(\013"
  "21.openbot_bridge.ros2_msgs.geometry_msg"
  "s.Transform\022A\n\nvelocities\030\002 \003(\0132-.openbo"
  "t_bridge.ros2_msgs.geometry_msgs.Twist\022D"
  "\n\raccelerations\030\003 \003(\0132-.openbot_bridge.r"
  "os2_msgs.geometry_msgs.Twist\022N\n\017time_fro"
  "m_start\030\004 \001(\01325.openbot_bridge.ros2_msgs"
  ".builtin_interfaces.Durationb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto_deps[3] = {
  &::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fbuiltin_5finterfaces_2eproto,
  &::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fgeometry_5fmsgs_2eproto,
  &::descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2fstd_5fmsgs_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto_sccs[4] = {
  &scc_info_JointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base,
  &scc_info_JointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base,
  &scc_info_MultiDOFJointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base,
  &scc_info_MultiDOFJointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto = {
  false, false, descriptor_table_protodef_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto, "openbot_bridge/ros2_msgs/trajectory_msgs.proto", 1116,
  &descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto_once, descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto_sccs, descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto_deps, 4, 3,
  schemas, file_default_instances, TableStruct_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto::offsets,
  file_level_metadata_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto, 4, file_level_enum_descriptors_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto, file_level_service_descriptors_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto)), true);
namespace openbot_bridge {
namespace ros2_msgs {
namespace trajectory_msgs {

// ===================================================================

class JointTrajectory::_Internal {
 public:
  static const ::openbot_bridge::ros2_msgs::std_msgs::Header& header(const JointTrajectory* msg);
};

const ::openbot_bridge::ros2_msgs::std_msgs::Header&
JointTrajectory::_Internal::header(const JointTrajectory* msg) {
  return *msg->header_;
}
void JointTrajectory::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
JointTrajectory::JointTrajectory(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  joint_names_(arena),
  points_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
}
JointTrajectory::JointTrajectory(const JointTrajectory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      joint_names_(from.joint_names_),
      points_(from.points_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::openbot_bridge::ros2_msgs::std_msgs::Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
}

void JointTrajectory::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base);
  header_ = nullptr;
}

JointTrajectory::~JointTrajectory() {
  // @@protoc_insertion_point(destructor:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JointTrajectory::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void JointTrajectory::ArenaDtor(void* object) {
  JointTrajectory* _this = reinterpret_cast< JointTrajectory* >(object);
  (void)_this;
}
void JointTrajectory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JointTrajectory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JointTrajectory& JointTrajectory::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base);
  return *internal_default_instance();
}


void JointTrajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joint_names_.Clear();
  points_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JointTrajectory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string joint_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_joint_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint points = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_points(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JointTrajectory::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated string joint_names = 2;
  for (int i = 0, n = this->_internal_joint_names_size(); i < n; i++) {
    const auto& s = this->_internal_joint_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory.joint_names");
    target = stream->WriteString(2, s, target);
  }

  // repeated .openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_points_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_points(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  return target;
}

size_t JointTrajectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string joint_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(joint_names_.size());
  for (int i = 0, n = joint_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      joint_names_.Get(i));
  }

  // repeated .openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint points = 3;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->points_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JointTrajectory::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  GOOGLE_DCHECK_NE(&from, this);
  const JointTrajectory* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JointTrajectory>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
    MergeFrom(*source);
  }
}

void JointTrajectory::MergeFrom(const JointTrajectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  joint_names_.MergeFrom(from.joint_names_);
  points_.MergeFrom(from.points_);
  if (from.has_header()) {
    _internal_mutable_header()->::openbot_bridge::ros2_msgs::std_msgs::Header::MergeFrom(from._internal_header());
  }
}

void JointTrajectory::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointTrajectory::CopyFrom(const JointTrajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointTrajectory::IsInitialized() const {
  return true;
}

void JointTrajectory::InternalSwap(JointTrajectory* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  joint_names_.InternalSwap(&other->joint_names_);
  points_.InternalSwap(&other->points_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JointTrajectory::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class JointTrajectoryPoint::_Internal {
 public:
  static const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& time_from_start(const JointTrajectoryPoint* msg);
};

const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration&
JointTrajectoryPoint::_Internal::time_from_start(const JointTrajectoryPoint* msg) {
  return *msg->time_from_start_;
}
void JointTrajectoryPoint::clear_time_from_start() {
  if (GetArena() == nullptr && time_from_start_ != nullptr) {
    delete time_from_start_;
  }
  time_from_start_ = nullptr;
}
JointTrajectoryPoint::JointTrajectoryPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  positions_(arena),
  velocities_(arena),
  accelerations_(arena),
  effort_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
}
JointTrajectoryPoint::JointTrajectoryPoint(const JointTrajectoryPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      positions_(from.positions_),
      velocities_(from.velocities_),
      accelerations_(from.accelerations_),
      effort_(from.effort_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_time_from_start()) {
    time_from_start_ = new ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration(*from.time_from_start_);
  } else {
    time_from_start_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
}

void JointTrajectoryPoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base);
  time_from_start_ = nullptr;
}

JointTrajectoryPoint::~JointTrajectoryPoint() {
  // @@protoc_insertion_point(destructor:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JointTrajectoryPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete time_from_start_;
}

void JointTrajectoryPoint::ArenaDtor(void* object) {
  JointTrajectoryPoint* _this = reinterpret_cast< JointTrajectoryPoint* >(object);
  (void)_this;
}
void JointTrajectoryPoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JointTrajectoryPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JointTrajectoryPoint& JointTrajectoryPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base);
  return *internal_default_instance();
}


void JointTrajectoryPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positions_.Clear();
  velocities_.Clear();
  accelerations_.Clear();
  effort_.Clear();
  if (GetArena() == nullptr && time_from_start_ != nullptr) {
    delete time_from_start_;
  }
  time_from_start_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JointTrajectoryPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated double positions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_positions(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9) {
          _internal_add_positions(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double velocities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_velocities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17) {
          _internal_add_velocities(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double accelerations = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_accelerations(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25) {
          _internal_add_accelerations(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double effort = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_effort(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33) {
          _internal_add_effort(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_time_from_start(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JointTrajectoryPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double positions = 1;
  if (this->_internal_positions_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_positions(), target);
  }

  // repeated double velocities = 2;
  if (this->_internal_velocities_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_velocities(), target);
  }

  // repeated double accelerations = 3;
  if (this->_internal_accelerations_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_accelerations(), target);
  }

  // repeated double effort = 4;
  if (this->_internal_effort_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_effort(), target);
  }

  // .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 5;
  if (this->has_time_from_start()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::time_from_start(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  return target;
}

size_t JointTrajectoryPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double positions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_positions_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _positions_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double velocities = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_velocities_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _velocities_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double accelerations = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_accelerations_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _accelerations_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double effort = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_effort_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _effort_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 5;
  if (this->has_time_from_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_from_start_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JointTrajectoryPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const JointTrajectoryPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JointTrajectoryPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
    MergeFrom(*source);
  }
}

void JointTrajectoryPoint::MergeFrom(const JointTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
  velocities_.MergeFrom(from.velocities_);
  accelerations_.MergeFrom(from.accelerations_);
  effort_.MergeFrom(from.effort_);
  if (from.has_time_from_start()) {
    _internal_mutable_time_from_start()->::openbot_bridge::ros2_msgs::builtin_interfaces::Duration::MergeFrom(from._internal_time_from_start());
  }
}

void JointTrajectoryPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointTrajectoryPoint::CopyFrom(const JointTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.JointTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointTrajectoryPoint::IsInitialized() const {
  return true;
}

void JointTrajectoryPoint::InternalSwap(JointTrajectoryPoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  positions_.InternalSwap(&other->positions_);
  velocities_.InternalSwap(&other->velocities_);
  accelerations_.InternalSwap(&other->accelerations_);
  effort_.InternalSwap(&other->effort_);
  swap(time_from_start_, other->time_from_start_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JointTrajectoryPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MultiDOFJointTrajectory::_Internal {
 public:
  static const ::openbot_bridge::ros2_msgs::std_msgs::Header& header(const MultiDOFJointTrajectory* msg);
};

const ::openbot_bridge::ros2_msgs::std_msgs::Header&
MultiDOFJointTrajectory::_Internal::header(const MultiDOFJointTrajectory* msg) {
  return *msg->header_;
}
void MultiDOFJointTrajectory::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
MultiDOFJointTrajectory::MultiDOFJointTrajectory(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  joint_names_(arena),
  points_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
}
MultiDOFJointTrajectory::MultiDOFJointTrajectory(const MultiDOFJointTrajectory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      joint_names_(from.joint_names_),
      points_(from.points_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::openbot_bridge::ros2_msgs::std_msgs::Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
}

void MultiDOFJointTrajectory::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MultiDOFJointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base);
  header_ = nullptr;
}

MultiDOFJointTrajectory::~MultiDOFJointTrajectory() {
  // @@protoc_insertion_point(destructor:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MultiDOFJointTrajectory::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void MultiDOFJointTrajectory::ArenaDtor(void* object) {
  MultiDOFJointTrajectory* _this = reinterpret_cast< MultiDOFJointTrajectory* >(object);
  (void)_this;
}
void MultiDOFJointTrajectory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MultiDOFJointTrajectory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MultiDOFJointTrajectory& MultiDOFJointTrajectory::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MultiDOFJointTrajectory_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base);
  return *internal_default_instance();
}


void MultiDOFJointTrajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joint_names_.Clear();
  points_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MultiDOFJointTrajectory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string joint_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_joint_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint points = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_points(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MultiDOFJointTrajectory::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated string joint_names = 2;
  for (int i = 0, n = this->_internal_joint_names_size(); i < n; i++) {
    const auto& s = this->_internal_joint_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory.joint_names");
    target = stream->WriteString(2, s, target);
  }

  // repeated .openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_points_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_points(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  return target;
}

size_t MultiDOFJointTrajectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string joint_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(joint_names_.size());
  for (int i = 0, n = joint_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      joint_names_.Get(i));
  }

  // repeated .openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint points = 3;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->points_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .openbot_bridge.ros2_msgs.std_msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MultiDOFJointTrajectory::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiDOFJointTrajectory* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MultiDOFJointTrajectory>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
    MergeFrom(*source);
  }
}

void MultiDOFJointTrajectory::MergeFrom(const MultiDOFJointTrajectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  joint_names_.MergeFrom(from.joint_names_);
  points_.MergeFrom(from.points_);
  if (from.has_header()) {
    _internal_mutable_header()->::openbot_bridge::ros2_msgs::std_msgs::Header::MergeFrom(from._internal_header());
  }
}

void MultiDOFJointTrajectory::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiDOFJointTrajectory::CopyFrom(const MultiDOFJointTrajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiDOFJointTrajectory::IsInitialized() const {
  return true;
}

void MultiDOFJointTrajectory::InternalSwap(MultiDOFJointTrajectory* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  joint_names_.InternalSwap(&other->joint_names_);
  points_.InternalSwap(&other->points_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MultiDOFJointTrajectory::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MultiDOFJointTrajectoryPoint::_Internal {
 public:
  static const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration& time_from_start(const MultiDOFJointTrajectoryPoint* msg);
};

const ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration&
MultiDOFJointTrajectoryPoint::_Internal::time_from_start(const MultiDOFJointTrajectoryPoint* msg) {
  return *msg->time_from_start_;
}
void MultiDOFJointTrajectoryPoint::clear_transforms() {
  transforms_.Clear();
}
void MultiDOFJointTrajectoryPoint::clear_velocities() {
  velocities_.Clear();
}
void MultiDOFJointTrajectoryPoint::clear_accelerations() {
  accelerations_.Clear();
}
void MultiDOFJointTrajectoryPoint::clear_time_from_start() {
  if (GetArena() == nullptr && time_from_start_ != nullptr) {
    delete time_from_start_;
  }
  time_from_start_ = nullptr;
}
MultiDOFJointTrajectoryPoint::MultiDOFJointTrajectoryPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  transforms_(arena),
  velocities_(arena),
  accelerations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
}
MultiDOFJointTrajectoryPoint::MultiDOFJointTrajectoryPoint(const MultiDOFJointTrajectoryPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      transforms_(from.transforms_),
      velocities_(from.velocities_),
      accelerations_(from.accelerations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_time_from_start()) {
    time_from_start_ = new ::openbot_bridge::ros2_msgs::builtin_interfaces::Duration(*from.time_from_start_);
  } else {
    time_from_start_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
}

void MultiDOFJointTrajectoryPoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MultiDOFJointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base);
  time_from_start_ = nullptr;
}

MultiDOFJointTrajectoryPoint::~MultiDOFJointTrajectoryPoint() {
  // @@protoc_insertion_point(destructor:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MultiDOFJointTrajectoryPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete time_from_start_;
}

void MultiDOFJointTrajectoryPoint::ArenaDtor(void* object) {
  MultiDOFJointTrajectoryPoint* _this = reinterpret_cast< MultiDOFJointTrajectoryPoint* >(object);
  (void)_this;
}
void MultiDOFJointTrajectoryPoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MultiDOFJointTrajectoryPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MultiDOFJointTrajectoryPoint& MultiDOFJointTrajectoryPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MultiDOFJointTrajectoryPoint_openbot_5fbridge_2fros2_5fmsgs_2ftrajectory_5fmsgs_2eproto.base);
  return *internal_default_instance();
}


void MultiDOFJointTrajectoryPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transforms_.Clear();
  velocities_.Clear();
  accelerations_.Clear();
  if (GetArena() == nullptr && time_from_start_ != nullptr) {
    delete time_from_start_;
  }
  time_from_start_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MultiDOFJointTrajectoryPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Transform transforms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_transforms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist velocities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_velocities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist accelerations = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_accelerations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_time_from_start(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MultiDOFJointTrajectoryPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Transform transforms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_transforms_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_transforms(i), target, stream);
  }

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist velocities = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_velocities_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_velocities(i), target, stream);
  }

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist accelerations = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_accelerations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_accelerations(i), target, stream);
  }

  // .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 4;
  if (this->has_time_from_start()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::time_from_start(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  return target;
}

size_t MultiDOFJointTrajectoryPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Transform transforms = 1;
  total_size += 1UL * this->_internal_transforms_size();
  for (const auto& msg : this->transforms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist velocities = 2;
  total_size += 1UL * this->_internal_velocities_size();
  for (const auto& msg : this->velocities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .openbot_bridge.ros2_msgs.geometry_msgs.Twist accelerations = 3;
  total_size += 1UL * this->_internal_accelerations_size();
  for (const auto& msg : this->accelerations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .openbot_bridge.ros2_msgs.builtin_interfaces.Duration time_from_start = 4;
  if (this->has_time_from_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_from_start_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MultiDOFJointTrajectoryPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiDOFJointTrajectoryPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MultiDOFJointTrajectoryPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
    MergeFrom(*source);
  }
}

void MultiDOFJointTrajectoryPoint::MergeFrom(const MultiDOFJointTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transforms_.MergeFrom(from.transforms_);
  velocities_.MergeFrom(from.velocities_);
  accelerations_.MergeFrom(from.accelerations_);
  if (from.has_time_from_start()) {
    _internal_mutable_time_from_start()->::openbot_bridge::ros2_msgs::builtin_interfaces::Duration::MergeFrom(from._internal_time_from_start());
  }
}

void MultiDOFJointTrajectoryPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiDOFJointTrajectoryPoint::CopyFrom(const MultiDOFJointTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openbot_bridge.ros2_msgs.trajectory_msgs.MultiDOFJointTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiDOFJointTrajectoryPoint::IsInitialized() const {
  return true;
}

void MultiDOFJointTrajectoryPoint::InternalSwap(MultiDOFJointTrajectoryPoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transforms_.InternalSwap(&other->transforms_);
  velocities_.InternalSwap(&other->velocities_);
  accelerations_.InternalSwap(&other->accelerations_);
  swap(time_from_start_, other->time_from_start_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MultiDOFJointTrajectoryPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace trajectory_msgs
}  // namespace ros2_msgs
}  // namespace openbot_bridge
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory* Arena::CreateMaybeMessage< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectory >(arena);
}
template<> PROTOBUF_NOINLINE ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint* Arena::CreateMaybeMessage< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openbot_bridge::ros2_msgs::trajectory_msgs::JointTrajectoryPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory* Arena::CreateMaybeMessage< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectory >(arena);
}
template<> PROTOBUF_NOINLINE ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint* Arena::CreateMaybeMessage< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openbot_bridge::ros2_msgs::trajectory_msgs::MultiDOFJointTrajectoryPoint >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
